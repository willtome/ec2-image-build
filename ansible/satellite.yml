---
- hosts: localhost
  vars_files:
    - vars/sat_repos.yml

  tasks:
  - name: set SELinux to permissive
    selinux:
      policy: targeted
      state: permissive
    tags:
     - pre_task

  - name: set hostname
    hostname:
      name: satellite.example.com
    tags:
      - pre_task

  - name: update IPv4 /etc/hosts
    copy:
      dest: "/etc/hosts"
      content: |
        127.0.0.1 satellite.example.com satellite localhost localhost.localdomain localhost4 localhost4.localdomain4
        ::1 satellite.example.com satellite localhost localhost.localdomain localhost6 localhost6.localdomain6
    tags:
      - pre_task

  - name: preserve hostname
    copy:
      dest: /etc/cloud/cloud.cfg.d/01_hostname.cfg
      content: |
        manage_etc_hosts: true
        preserve_hostname: true
        fqdn: satellite.example.com
    tags:
      - pre_task

  - name: remove rhui repos
    yum:
      name: rh-amazon-rhui-client*
      state: removed
    tags:
      - pre_task
      
  - name: configure product-id.conf
    copy:
      dest: /etc/yum/pluginconf.d/product-id.conf
      content: |
        [main]
        enabled=1
    tags:
      - pre_task

  - name: subscription manager
    redhat_subscription:
      state: present
      activationkey: AK-Sat
      org_id: "{{ org_id }}"
      auto_attach: true
    tags:
      - pre_task

  - name: installer repos
    rhsm_repository:
      name: 
        - rhel-server-rhscl-7-rpms
        - rhel-7-server-satellite-maintenance-6-rpms
        - rhel-7-server-satellite-6.8-rpms
        - rhel-7-server-rpms
        - rhel-7-server-ansible-2.9-rpms
      state: enabled
      purge: yes
    tags:
      - pre_task

  - name: installer package
    yum:
      name: satellite
      state: latest
    tags:
      - pre_task

  - name: install chrony
    include_role:
      name: oasis_roles.system.chrony
    tags:
      - software

  - name: set sat_pass
    set_fact:
      sat_pass: satellite123 #"{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
    tags:
      - software

  - name: run installer
    include_role:
      name: theforeman.operations.installer
    vars:
      installer_scenario: satellite
      installer_options:
          - "--foreman-initial-admin-password {{ sat_pass }}"
      installer_command: satellite-installer
    tags:
      - software

  - name: Deploy satellite_infra workloads
    include_role:
      name: "{{ satellite_infra_vars }}"
    loop: "{{ satellite_infra_workloads }}"
    loop_control:
      loop_var: satellite_infra_vars
    when: satellite_infra_workloads | d("") | length >0
    tags:
      - post_software

  - name: install default scap content
    command: foreman-rake foreman_openscap:bulk_upload:default

  # work around for https://bugzilla.redhat.com/show_bug.cgi?id=1791340
  - name: workaround for bug 1791340
    lineinfile:
      path: /opt/theforeman/tfm/root/usr/share/gems/gems/smart_proxy_dynflow_core-0.2.6/smart_proxy_dynflow_core.gemspec
      regexp: gem.authors
      line: "  gem.authors       = ['Ivan Necas']"
    tags:
     - pos_software

  - name: motd
    copy:
      dest: /etc/motd
      content: |
        #########################################
        ## Login with Password {{ sat_pass }} ##
        #########################################
    tags:
     - post_software

  - name: Create gpg key directory for importing keys
    file:
      path: "{{ item }}"
      state: directory
      mode: 0755
    with_items:
      - /etc/pki/rpm-gpg/import

  - name: Pull down CentOS 7 GPG key
    get_url:
      url: https://www.centos.org/keys/RPM-GPG-KEY-CentOS-7
      dest: /etc/pki/rpm-gpg/import
      mode: '0440'
    register: getcentos7gpgkey
    until: getcentos7gpgkey is succeeded

  - name: Pull down CentOS 8 GPG key
    get_url:
      url: https://www.centos.org/keys/RPM-GPG-KEY-CentOS-Official
      dest: /etc/pki/rpm-gpg/import
      mode: '0440'
    register: getcentos8gpgkey
    until: getcentos8gpgkey is succeeded

  - name: hammer org list
    command: >-
      hammer --output json organization list
    environment:
      HOME: /root
    register: hammer_org_list_result
    ignore_errors: true

  - name: set the Organization Id from specific org selection via "{{ organization }}" variable and .Id
    set_fact: sat_org_id={{ hammer_org_list_result.stdout | from_json | json_query(my_query) }}
    vars:
      my_query: "[?Name=='Default Organization'].Id"

  - name: What is the Org Id? 
    debug:
      msg: "The Org Id selected is: {{ sat_org_id[0] }}"

  - name: hammer create RPM-GPG-KEY-CentOS-7 key
    command: >-
      hammer content-credentials create --organization-id {{ sat_org_id[0] }}
      --key "/etc/pki/rpm-gpg/import/RPM-GPG-KEY-CentOS-7"
      --name "RPM-GPG-KEY-CentOS-7"
      --content-type gpg_key
    environment:
      HOME: /root
    register: hammer_centos7_gpgkey_result
    ignore_errors: true

  - name: RPM-GPG-KEY-CentOS-7 key creation output 
    debug:
      msg: "{{ hammer_centos7_gpgkey_result.stdout }}"

  - name: hammer create RPM-GPG-KEY-CentOS-8 key
    command: >-
      hammer content-credentials create --organization-id {{ sat_org_id[0] }}
      --key "/etc/pki/rpm-gpg/import/RPM-GPG-KEY-CentOS-Official"
      --name "RPM-GPG-KEY-CentOS-8"
      --content-type gpg_key
    environment:
      HOME: /root
    register: hammer_centos8_gpgkey_result
    ignore_errors: true

  - name: RPM-GPG-KEY-CentOS-8 key creation output 
    debug:
      msg: "{{ hammer_centos8_gpgkey_result.stdout }}"

  # https://projects.theforeman.org/issues/10266
  - name: disconnected mode
    command: 'hammer settings set --name content_disconnected --value true'
    environment:
      HOME: /root
    
  - name: unregister
    redhat_subscription:
      state: absent
